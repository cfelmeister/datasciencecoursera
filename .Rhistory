}
f <- function(x){
g <-function(y){
y + z
}
z <-4
x + g(x)
}
z <-10
f(3)
f <- function(x){
g <-function(y){
y + z
}
z <-4
x + g(x)
}
f(3)
x <-5
y <- if(x<3){}
x<-5
y<- if(x<3){
NA
}else{
10
}
y
corr <- function(directory="specdata",threshold=400){
wData<-getcomplete(threshold=threshold)
as.vector(cor(wData$nitrate,wData$sulfate))
}
getcomplete <- function(directory="specdata", id=1:332,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
answerFrame <- rbind(answerFrame,thisFrame)
}
}
answerFrame
}
cr <- corr(threshold=150)
summary(cr)
corr <- function(directory="specdata",threshold=400){
wData<-getcomplete(threshold=threshold)
cor(wData$nitrate,wData$sulfate,method="kendall")
}
getcomplete <- function(directory="specdata", id=1:33,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
answerFrame <- rbind(answerFrame,thisFrame)
}
}
answerFrame
}
cr <- corr(threshold=150)
cr
summary(cr)
head(cr)
corr <- function(directory="specdata",threshold=400){
wData<-getcomplete(threshold=threshold)
cor(wData$nitrate,wData$sulfate,method="pearson")
}
getcomplete <- function(directory="specdata", id=1:33,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
answerFrame <- rbind(answerFrame,thisFrame)
}
}
answerFrame
}
cr <- corr(threshold=150)
summary(cr)
corr <- function(directory="specdata",threshold=400){
getcomplete(threshold=threshold)
}
getcomplete <- function(directory="specdata", id=1:33,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV -> NULL
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
answerFrame
}
cr <- corr(threshold=150)
corr <- function(directory="specdata",threshold=400){
getcomplete(threshold=threshold)
}
getcomplete <- function(directory="specdata", id=1:33,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
answerFrame
}
cr <- corr(threshold=150)
cr
corr <- function(directory="specdata",threshold=400){
getcomplete(threshold=threshold)
}
getcomplete <- function(directory="specdata", id=1:332,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
answerFrame
}
cr <- corr(threshold=150)
cr
summary(cr)
corr <- function(directory="specdata",threshold=400){
getcomplete(threshold=threshold)
}
getcomplete <- function(directory="specdata", id=1:332,threshold=400){
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in id){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
returnV
}
cr <- corr(threshold=150)
cr
summary(cr)
head(cr)
corr <- function(directory="specdata",threshold=400){
getcomplete(threshold=threshold)
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in 1:332){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
returnV
}
cr <- corr("specdata",400)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
corr <- function(directory="specdata",threshold=0){
getcomplete(threshold=threshold)
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in 1:332){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
length(returnV)
}
cr <-corr("specdata",5000)
cr
corr("specdata",250)
corr <- function(directory="specdata",threshold=0){
getcomplete(threshold=threshold)
baseDir <- "/Users/cfelmeister/datasciencecoursera/"
#empty data frame for answer
answerFrame <- data.frame(Date=character(),sulfate=numeric(),nitrate=numeric(),ID=numeric())
ansF <- data.frame(id=numeric(),nobs=numeric())
returnV <- NULL
for(i in 1:332){
f <- padZeros(i,3)
fName <- paste(baseDir,directory,"/",f,".csv",sep="")
thisReturn = read.csv(fName,header=TRUE);
thisFrame <- thisReturn[complete.cases(thisReturn),]
if (nrow(thisFrame) > threshold){
crr<-cor(thisFrame$nitrate,thisFrame$sulfate)
returnV <- c(returnV,crr)
}
}
returnV
}
cr <- corr()
length(cr)
summary(cr)
submit()
submit()
submit()
swirl()
library("swirl")
ls()
rm(list=ls())
swirl()
?list.files()
?list.files
args(list.files)
old.dir <- getwd()
mkdir("testdir")
dir.create("testdir")
setwd("~/testdir)
setwd("~/datasciencecoursera/testdir")
setwd("testdir")
getwd()
setwd(old.dir)
getwd()
setwd("testdir")
create.file("mytest.R")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
info()
ls("mytest.R")
ugh
file.show("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.info("mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
list.files()
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive = TRUE)
dir.remove("testdir2")
file.remove("testdir2")
file.remove("testdir2/testdir3", recursive=TRUE)
unlink("testdir2,recursive=TRUE")
unlink("testdir2",recursive=TRUE")
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10, length=30)
seq(5, 10, length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), time=10)
rep(c(0,1,2), times=10)
rep(c(0,1,3), each=10)
rep(c(0,1,2),each=10)
info()
bye()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
head(flags)
class(cls_list)
as.character(cls_list)
class(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag.colors <- flags[,11:17]
flag.colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
sapply(flag_colors,sum)
lapply(flag_colors, sum)
sapply(flag.colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shaps <- flags[, 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
class(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
nxt()
bye()
swirl()
sqpply(flags,unique)
sapply(flags,unique)
vapply(flags,unique, numeric(1))
ok()
sapplye(flags,class)
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean )
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
bye()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
args(head)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$active_Growth_Period)
table(plants$Active_Growth_Period)
play()
table(plants,is.na())
table(plants,is.na)
nxt()
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
?LETTERS
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace=TRUE, prob(c(0.3,0.7)))
flips <- sample(c(0,1), 100, replace=TRUE, prob= c(0.3,0.7))
flips
sum(flips)
sum(!flips)
?rbinom
rbinom(1,size=100,prob= 0.7)
flips2 <- rbinom(1,size=100,prob= 0.7)
flips2 <- rbinom(1,n=100,size=1,prob= 0.7)
flips2 <- rbinom(n=100,size=1,prob= 0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
play()
dnorm(10)
qnorm(10)
nxt()
rnorm(10,100,25)
?rpois
rpois(5)
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- columnMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
bye()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
create.dir("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(mytest.R, mytest2.R)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2/testdir3" recursive=TRUE)
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char,"Charlie")
my_name
paste(my_name, collapse = " ")
paste("Hello","World", set=" ")
paste("Hello","World!", sep=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep='-')
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sampe(c(y,z), 100)
my_data <- sample(c(y,z), 100)
my_na <- is.na(mydata)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf = NA)
vect
name(vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[2]
vectp[c("foo","bar")]
vect[c("foo","bar")]
bye
bye()
